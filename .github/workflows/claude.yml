name: Claude Code

on:
  issue_comment:
    types: [created]
  pull_request_review_comment:
    types: [created]
  issues:
    types: [opened, assigned]
  pull_request_review:
    types: [submitted]

jobs:
  claude:
    if: |
      (github.event_name == 'issue_comment' && contains(github.event.comment.body, '@claude')) ||
      (github.event_name == 'pull_request_review_comment' && contains(github.event.comment.body, '@claude')) ||
      (github.event_name == 'pull_request_review' && contains(github.event.review.body, '@claude')) ||
      (github.event_name == 'issues' && (contains(github.event.issue.body, '@claude') || contains(github.event.issue.title, '@claude')))
    runs-on: ubuntu-latest
    permissions:
      # „É™„Éù„Ç∏„Éà„É™„ÅÆ„Ç≥„Éº„Éâ„ÇÑ„Éï„Ç°„Ç§„É´„Å∏„ÅÆ„Ç¢„ÇØ„Çª„ÇπÊ®©„Çí‰ªò‰∏é
      contents: write
      # Pull RequestÂë®„Çä„ÅÆÊ®©Èôê„ÅÆ‰ªò‰∏é
      pull-requests: write
      # Issue „ÅÆ‰ΩúÊàê„ÇÑÊõ¥Êñ∞„ÅÆÊ®©Èôê„Çí‰ªò‰∏é
      issues: write
      # ‰ªñ„ÅÆ„ÉØ„Éº„ÇØ„Éï„É≠„Éº„ÅÆÂÆüË°åÁä∂ÊÖã„ÇÑ„É≠„Ç∞„ÅÆÈñ≤Ë¶ßÊ®©Èôê
      actions: read
      # checks: write
      # commit „ÇÑ PR „Å´„Çπ„ÉÜ„Éº„Çø„Çπ„Çí‰ªò‰∏é„Åô„ÇãÊ®©Èôê„ÅÆ‰ªò‰∏é
      statuses: write
      # „É™„Éù„Ç∏„Éà„É™„ÅÆ ProjectsÔºàÊóß„Éó„É≠„Ç∏„Çß„ÇØ„Éà„Éú„Éº„ÉâÔºâ„ÇíÊìç‰Ωú„Åô„ÇãÊ®©Èôê
      repository-projects: write
      # deployments: write
      id-token: write
    env:
      TZ: Asia/Tokyo
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}   # üëà GH_TOKEN „ÇíËøΩÂä†„Åó„Å¶ .mcp.json „Å®‰∏ÄËá¥„Åï„Åõ„Çã
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          # ref „ÇíÂãïÁöÑ„Å´Âàá„ÇäÂàÜ„Åë„Çã
          ref: ${{ github.event.pull_request.base.ref || 'develop' }}

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'
      - name: Install uv CLI
        uses: astral-sh/setup-uv@v4

      - name: Setup Git configuration
        run: |
          git config --global user.name "Claude Code"
          git config --global user.email "claude-code@anthropic.com"
          git config --global init.defaultBranch main

      - name: Get PR info (only if PR)
        if: ${{ github.event.issue.pull_request }}
        run: |
          gh pr view ${{ github.event.issue.number }} --json number,title,body,baseRefName,headRefName > pr_info.json

      - name: Export PR info
        if: ${{ github.event.issue.pull_request }}
        run: |
          # PR_TITLE
          jq -r .title pr_info.json | tr -d '\r' | while IFS= read -r line; do
            echo "PR_TITLE=$line" >> $GITHUB_ENV
          done
          
          # PR_BODY
          pr_body=$(jq -r .body pr_info.json | tr -d '\r')
          echo "PR_BODY<<EOF" >> $GITHUB_ENV
          echo "$pr_body" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV
          
          echo "PR_BASE=$(jq -r .baseRefName pr_info.json | tr -d '\r')" >> $GITHUB_ENV
          echo "PR_HEAD=$(jq -r .headRefName pr_info.json | tr -d '\r')" >> $GITHUB_ENV

      - name: Load prompt from file
        run: |
          PROMPT_CONTENT="$(cat docs/prompt.md)"
          {
            echo 'PROMPT<<EOF'
            echo "$PROMPT_CONTENT"
            echo 'EOF'
          } >> $GITHUB_ENV

      - name: Run Claude Code
        id: claude
        uses: anthropics/claude-code-action@v1
        with:
          claude_code_oauth_token: ${{ secrets.CLAUDE_CODE_OAUTH_TOKEN }}
          anthropic_api_key: ${{ secrets.ANTHROPIC_API_KEY }}
          settings: ".claude/settings.json"
          track_progress: true
          base_branch: ${{ github.event.pull_request.base.ref || 'develop' }}
          branch_prefix: develop/
          use_sticky_comment: true 
          additional_permissions: |
            actions: read
          prompt: | 
            # Claude Code Prompt Template

            ## GitHub „Ç≥„É≥„ÉÜ„Ç≠„Çπ„Éà
            „É™„Éù„Ç∏„Éà„É™: ${{ github.repository }}
            ÂÆüË°å„É¶„Éº„Ç∂„Éº:`${{ github.actor }}
            
            ### PR / Issue ÊÉÖÂ†±
            - PRÁï™Âè∑: ${{ github.event.issue.number }}
            - PR„Çø„Ç§„Éà„É´: ${{ env.PR_TITLE }}
            - PRÊú¨Êñá: |
              ${{ env.PR_BODY }}
            - „Ç≥„É°„É≥„ÉàÊú¨Êñá: |
              ${{ github.event.comment.body }}
            
            ### „Éñ„É©„É≥„ÉÅÊÉÖÂ†±
            - Base„Éñ„É©„É≥„ÉÅ: ${{ env.PR_BASE }}
            - Head„Éñ„É©„É≥„ÉÅ: ${{ env.PR_HEAD }}
            - Base„Éñ„É©„É≥„ÉÅ (GitHub): ${{ github.base_ref }}
            - Head„Éñ„É©„É≥„ÉÅ (GitHub): ${{ github.head_ref }}

            ${{ env.PROMPT }}
